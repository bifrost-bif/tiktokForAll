{"ast":null,"code":"var _jsxFileName = \"/home/a752674/dev/tiktok/tiktokForAll/tournoi/src/pages/KnockoutStage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Grid, Typography, Paper } from '@mui/material';\nimport './KnockoutStage.css'; // Le fichier CSS pour la mise en forme\n\n// Exemple de données des matchs avec des photos et des scores pour toutes les phases\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst knockoutData = {\n  \"1/8e de finale\": [{\n    player1: {\n      name: \"Joueur 1\",\n      photo: \"/images/profiles/joueur1.png\",\n      score: 3\n    },\n    player2: {\n      name: \"Joueur 2\",\n      photo: \"/images/profiles/joueur2.png\",\n      score: 1\n    }\n  }, {\n    player1: {\n      name: \"Joueur 3\",\n      photo: \"/images/profiles/joueur3.png\",\n      score: 2\n    },\n    player2: {\n      name: \"Joueur 4\",\n      photo: \"/images/profiles/joueur4.png\",\n      score: 4\n    }\n  }, {\n    player1: {\n      name: \"Joueur 5\",\n      photo: \"/images/profiles/joueur5.png\",\n      score: 1\n    },\n    player2: {\n      name: \"Joueur 6\",\n      photo: \"/images/profiles/joueur6.png\",\n      score: 2\n    }\n  }, {\n    player1: {\n      name: \"Joueur 7\",\n      photo: \"/images/profiles/joueur7.png\",\n      score: 3\n    },\n    player2: {\n      name: \"Joueur 8\",\n      photo: \"/images/profiles/joueur8.png\",\n      score: 5\n    }\n  }]\n  // Autres phases (1/4, 1/2, Finale)...\n};\nconst KnockoutStage = () => {\n  _s();\n  const [selectedMatch, setSelectedMatch] = useState(null); // Pour suivre quel match est cliqué\n\n  // Fonction pour calculer les pourcentages pour les barres\n  const calculatePercentage = (score1, score2) => {\n    const total = score1 + score2;\n    return {\n      player1: score1 / total * 100,\n      player2: score2 / total * 100\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"knockout-stage-container\",\n    children: Object.keys(knockoutData).map((roundName, roundIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"round-container\",\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        className: \"round-title\",\n        children: roundName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        justifyContent: \"center\",\n        children: knockoutData[roundName].map((match, matchIndex) => {\n          const isSelected = selectedMatch === `${roundIndex}-${matchIndex}`;\n          const {\n            player1,\n            player2\n          } = match;\n          const percentages = calculatePercentage(player1.score, player2.score);\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Paper, {\n              className: \"match-container\",\n              onClick: () => setSelectedMatch(isSelected ? null : `${roundIndex}-${matchIndex}`),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"match-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"player\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: player1.photo,\n                    alt: player1.name,\n                    className: \"player-photo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"player-name\",\n                    children: player1.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 48,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"player\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: player2.photo,\n                    alt: player2.name,\n                    className: \"player-photo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"player-name\",\n                    children: player2.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 41\n              }, this), isSelected && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"score-bar\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-bar-part red\",\n                  style: {\n                    width: `${percentages.player1}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"score-bar-part blue\",\n                  style: {\n                    width: `${percentages.player2}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, this)\n          }, matchIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, roundIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(KnockoutStage, \"P1IFpm9rxmjRii4POJdyPhaee8w=\");\n_c = KnockoutStage;\nexport default KnockoutStage;\nvar _c;\n$RefreshReg$(_c, \"KnockoutStage\");","map":{"version":3,"names":["React","useState","Grid","Typography","Paper","jsxDEV","_jsxDEV","knockoutData","player1","name","photo","score","player2","KnockoutStage","_s","selectedMatch","setSelectedMatch","calculatePercentage","score1","score2","total","className","children","Object","keys","map","roundName","roundIndex","variant","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","justifyContent","match","matchIndex","isSelected","percentages","item","xs","md","onClick","src","alt","style","width","_c","$RefreshReg$"],"sources":["/home/a752674/dev/tiktok/tiktokForAll/tournoi/src/pages/KnockoutStage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Grid, Typography, Paper } from '@mui/material';\nimport './KnockoutStage.css'; // Le fichier CSS pour la mise en forme\n\n// Exemple de données des matchs avec des photos et des scores pour toutes les phases\nconst knockoutData = {\n    \"1/8e de finale\": [\n        { player1: { name: \"Joueur 1\", photo: \"/images/profiles/joueur1.png\", score: 3 }, player2: { name: \"Joueur 2\", photo: \"/images/profiles/joueur2.png\", score: 1 } },\n        { player1: { name: \"Joueur 3\", photo: \"/images/profiles/joueur3.png\", score: 2 }, player2: { name: \"Joueur 4\", photo: \"/images/profiles/joueur4.png\", score: 4 } },\n        { player1: { name: \"Joueur 5\", photo: \"/images/profiles/joueur5.png\", score: 1 }, player2: { name: \"Joueur 6\", photo: \"/images/profiles/joueur6.png\", score: 2 } },\n        { player1: { name: \"Joueur 7\", photo: \"/images/profiles/joueur7.png\", score: 3 }, player2: { name: \"Joueur 8\", photo: \"/images/profiles/joueur8.png\", score: 5 } },\n    ],\n    // Autres phases (1/4, 1/2, Finale)...\n};\n\nconst KnockoutStage = () => {\n    const [selectedMatch, setSelectedMatch] = useState(null); // Pour suivre quel match est cliqué\n\n    // Fonction pour calculer les pourcentages pour les barres\n    const calculatePercentage = (score1, score2) => {\n        const total = score1 + score2;\n        return {\n            player1: (score1 / total) * 100,\n            player2: (score2 / total) * 100\n        };\n    };\n\n    return (\n        <div className=\"knockout-stage-container\">\n            {Object.keys(knockoutData).map((roundName, roundIndex) => (\n                <div key={roundIndex} className=\"round-container\">\n                    <Typography variant=\"h5\" className=\"round-title\">{roundName}</Typography>\n                    <Grid container spacing={2} justifyContent=\"center\">\n                        {knockoutData[roundName].map((match, matchIndex) => {\n                            const isSelected = selectedMatch === `${roundIndex}-${matchIndex}`;\n                            const { player1, player2 } = match;\n                            const percentages = calculatePercentage(player1.score, player2.score);\n\n                            return (\n                                <Grid item xs={12} md={6} key={matchIndex}>\n                                    <Paper\n                                        className=\"match-container\"\n                                        onClick={() => setSelectedMatch(isSelected ? null : `${roundIndex}-${matchIndex}`)}\n                                    >\n                                        <div className=\"match-info\">\n                                            <div className=\"player\">\n                                                <img src={player1.photo} alt={player1.name} className=\"player-photo\" />\n                                                <span className=\"player-name\">{player1.name}</span>\n                                            </div>\n                                            <div className=\"player\">\n                                                <img src={player2.photo} alt={player2.name} className=\"player-photo\" />\n                                                <span className=\"player-name\">{player2.name}</span>\n                                            </div>\n                                        </div>\n\n                                        {/* Afficher la barre de score si le match est sélectionné */}\n                                        {isSelected && (\n                                            <div className=\"score-bar\">\n                                                <div className=\"score-bar-part red\" style={{ width: `${percentages.player1}%` }} />\n                                                <div className=\"score-bar-part blue\" style={{ width: `${percentages.player2}%` }} />\n                                            </div>\n                                        )}\n                                    </Paper>\n                                </Grid>\n                            );\n                        })}\n                    </Grid>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default KnockoutStage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}